@*@model IEnumerable<Team1CentricAplication.Models.Profiles>*@
@model PagedList.IPagedList<Team1CentricAplication.Models.Profiles>
@using PagedList.Mvc;
@using Microsoft.AspNet.Identity;
@using Team1CentricAplication.Models;
@using Team1CentricAplication.DAL;
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = ViewBag.search }))

@{
    ViewBag.Title = "List of Profiles";
}

<h2>List of Profiles</h2>
<p>
    @Html.ActionLink("Create A New Profile", "Create")
</p>
<table class="table table-striped table-condensed table-hover" style="background-color: antiquewhite">

    <tr>
        <th>
            Profile Picture
        </th>
        <th>
            First Name
        </th>
        <th>
            Last Name
        </th>
        <th>
            Phone
        </th>
        <th>
            Email
        </th>
        <th>
            City
        </th>
        <th>
            Zip
        </th>
        <th></th>
        <th></th>
        <th></th>
        <th></th>


    </tr>
    <tr></tr>


    @foreach (var item in Model)
    {
        <tr>
            <td>
                <img src="@Url.Content("~/Images/")@item.profilePicture" height="150" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.firstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.lastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.city)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.zip)
            </td>
            <td>
                @{
                    Team1Context db = new Team1Context();
                    Guid profilesId;
                    Guid.TryParse(User.Identity.GetUserId(), out profilesId);
                    Profiles loggedInUser = db.Profiles.Find(profilesId);
                    if (loggedInUser != null)
                    {
                        bool isAdmin = loggedInUser.role == Profiles.roles.admin;
                        if (isAdmin)
                        {
                            <a href="~/profiles/edit/@item.profilesID"> Edit</a>
                        }

                    }
                }
            </td>
            <td>
                @{
                    <a href="~/values/create/@item.profilesID"> Recognize</a>
                }
            </td>
            <td>
                @Html.ActionLink("Details", "Details", new { id = item.profilesID })
            </td>
            <td>
                @{

                    if (loggedInUser != null)
                    {
                        bool isAdmin = loggedInUser.role == Profiles.roles.admin;
                        if (isAdmin)
                        {
                            <a href="~/profiles/delete/@item.profilesID"> Delete</a>
                        }
                    }
                }
            </td>
        </tr>
        @*</table>
            <table class="table table-striped table-condensed ">*@
        <tr>
            <td>
                &nbsp;
            </td>
            <td colspan="10">
                <ul class="bg-success" style="background-color: antiquewhite">
                    @{
                        foreach (Team1CentricAplication.Models.Values inv in item.AwardRecipient)
                        {
                            <li class="text-justify">@inv.nominatedValues</li>
                        }
                    }
                </ul>
            </td>
        </tr>

    }
</table>
<br />
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = ViewBag.search }))
