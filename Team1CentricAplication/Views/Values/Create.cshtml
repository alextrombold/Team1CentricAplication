@model Team1CentricAplication.Models.Values

@{
    ViewBag.Title = "Values";
}

<h2>Recognize Your Co-Worker! You can recognize them by indicating which Centric Values they represent!</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.profilesID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("profilesID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.profilesID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.nominatedValues, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.nominatedValues, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nominatedValues, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.AwardNominator, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AwardNominator, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AwardNominator, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.recognitionNote, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.recognitionNote, 5, 120, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.recognitionNote, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.recognizationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.recognizationDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.recognizationDate, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdn.tiny.cloud/1/opaq48em3ew4wlven84iqqt8zhh2a4mmd1vugv4fr2m8m30r/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
    <script>
            tinymce.init({
                selector: '#recognitionNote',
                plugins:  'a11ychecker advcode casechange formatpainter linkchecker autolink lists checklist media mediaembed pageembed permanentpen powerpaste table advtable tinymcespellchecker',
                toolbar_mode: 'floating',
            });
    </script>
}